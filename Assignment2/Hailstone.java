/* Caymon Sullivan P.3 * File: Hailstone.java * Name:  * Section Leader:  * -------------------- * This file is the starter file for the Hailstone problem. */import acm.program.*;public class Hailstone extends ConsoleProgram {		//Ignore this method for now.  It needs to be here to 	//run the program.  We'll talk about it second semester.	public static void main(String[] args){		new Hailstone().start(args);	}		public void run() 	{		//Only need to ask for a number once, so we put this outside of the loop		double number = readDouble("Enter a number: ");								//Declare the variable outside of the loop so it wont die inside		int number_Of_Times = 0;				while (true)		{			if (isOdd(number) == true)			{				//If the number is Odd								//Check to end loop				if (number <= 1) break; //<= to stop if the number goes below one								if (number >= 1) print((int)number); //Print the current number before it gets changed				number = ((number * 3) + 1); //Mess with the number				if (number >= 1) println(" is odd, so I make 3n +1: " + (int)number); //Print what happened and the resulting number				number_Of_Times++;			} else { 				//If the number is Even								//Check to end loop				if (number <= 1) break; //<= to stop if the number goes below one								if (number >= 1) print((int)number); //Print the current number before it gets changed				number = ((number)/2); //Mess with the number				if (number >= 1) println(" is even, so I take half: " + (int)number); //Print what happened and the resulting number				number_Of_Times++;			}		}		if (number <= 1) number_Of_Times--;		println("It took " + number_Of_Times + " times to get to the number 1");	}		//I have NO idea how this works with doubles O.o	private boolean isOdd(double n)	{		//		if (n % 2 == 1)		{			//Odd			return true;		} else {			//Even			return false;		}			}}